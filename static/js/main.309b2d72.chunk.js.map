{"version":3,"sources":["Firebase.js","User.js","ApproveStudents.js","Dashboard.js","Student.js","Login.js","Register.js","App.js","reportWebVitals.js","index.js"],"names":["FirebaseContext","React","createContext","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseProvider","children","useState","firebase","Provider","value","useFirebase","useContext","UserContext","UserProvider","user","setUser","loading","setLoading","useEffect","auth","onAuthStateChanged","a","getIdTokenResult","idTokenResult","role","claims","useUser","RangePicker","Select","Option","DatePicker","ApproveStudents","data","setData","record","setRecord","error","visible","setVisible","index","setIndex","Form","useForm","form","storage","onClose","capitalizeFirstLetter","string","charAt","toUpperCase","slice","onFinsh","values","getIdToken","idToken","fetch","id","method","headers","body","JSON","stringify","response","ok","json","Error","message","temp","approved","success","students","filter","element","undefined","acceptedBy","map","student","docuemnts","snapshots","docuemnt","ref","path","getDownloadURL","url","name","key","hctId","email","console","log","description","type","showIcon","expandable","expandedRowRender","companies","length","style","margin","major","numberPhone","program","sponsored","background","marginBottom","padding","company","comapnyName","contactNumber","rowExpandable","columns","title","dataIndex","render","text","size","disabled","onClick","dataSource","pagination","width","bodyStyle","paddingBottom","footer","textAlign","marginRight","submit","layout","onFinish","hideRequiredMark","Item","label","rules","required","TextArea","Resend","fontWeight","EmailWarning","emailVerified","closable","AddStudent","setError","data1","uid","status","fname","lname","resetFields","max","min","pattern","addonBefore","htmlType","className","Teacher","AcceptStudent","selectedRowKeys","setSelectedRowKeys","hasSelected","start","promises","why","Promise","all","tempdata","failed","forEach","push","marginLeft","rowSelection","onChange","getCheckboxProps","copySelectedRowKeys","result","CareerDep","current","setCurrent","height","e","defaultOpenKeys","selectedKeys","mode","Header","history","useHistory","borderBottom","display","alignItems","src","href","icon","UserOutlined","displayName","signOut","replace","pathname","Dashboard","to","state","from","dashboard","flexDirection","Dragger","Upload","Student","code","useParams","setApproved","submitted","setSubmitted","setSuccess","beforeNumber","setBeforeNumber","setFieldsValue","upload","file","filename","desti","child","put","cv","emiratesId","passport","inputs","documents","field","document","then","snapshot","metadata","fullPath","subTitle","SmileOutlined","initialValues","startDate","defaultValue","len","valuePropName","multiple","accept","beforeUpload","InboxOutlined","List","fields","add","remove","align","fieldKey","MinusCircleOutlined","block","PlusOutlined","NormalLoginForm","password","signInWithEmailAndPassword","prefix","addonAfter","placeholder","Password","LockOutlined","Register","extra","Group","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.309b2d72.chunk.js","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport app from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst FirebaseContext = React.createContext(null);\nconst config = {\n    apiKey: \"AIzaSyDPo5PSCF9eUt4ON2138vysh51XkXSw8kI\",\n    authDomain: \"capstone-a3162.firebaseapp.com\",\n    databaseURL: \"https://capstone-a3162.firebaseio.com\",\n    projectId: \"capstone-a3162\",\n    storageBucket: \"capstone-a3162.appspot.com\",\n    messagingSenderId: \"790078530679\",\n    appId: \"1:790078530679:web:31992822744e93cc255272\",\n    measurementId: \"G-SY924H3Z4Y\"\n};\napp.initializeApp(config);\n\nconst FirebaseProvider = ({children}) => {\n    const [firebase] = useState(app);\n    return (\n        <FirebaseContext.Provider value={firebase}>\n            {children}\n        </FirebaseContext.Provider>\n    )\n}\n\nconst useFirebase = () => {\n    return useContext(FirebaseContext)\n}\n\nexport {useFirebase, FirebaseProvider}","import React, {useContext, createContext, useEffect, useState} from \"react\";\nimport {useFirebase} from \"./Firebase\";\nimport {useHistory, useLocation} from \"react-router-dom\"\nconst UserContext = createContext(null);\n\nconst UserProvider = ({children}) => {\n    const [user, setUser] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n    const firebase = useFirebase();\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(async (user)=>{\n            if(user){\n                const idTokenResult = await user.getIdTokenResult()\n                const {role} = idTokenResult.claims\n                setUser({user, role})\n            }\n            setLoading(false)\n        })\n    }, []);\n    return (\n        <UserContext.Provider value={{user, setUser, loading}}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nconst useUser = ()=>{\n    return useContext(UserContext)\n}\n\nexport {UserProvider, useUser}","import {useEffect, useState} from \"react\";\nimport {useUser} from \"./User\";\nimport {\n    Alert,\n    Button,\n    Form,\n    message,\n    Space,\n    useForm,\n    Table,\n    Popover,\n    Drawer,\n    Col,\n    Row,\n    Input,\n    Select,\n    DatePicker\n} from \"antd\";\nimport {useFirebase} from \"./Firebase\";\n\nconst {Option} = Select;\nconst {RangePicker} = DatePicker;\nconst ApproveStudents = () => {\n    const [data, setData] = useState([]);\n    const [record, setRecord] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [visible, setVisible] = useState(false);\n    const [index, setIndex] = useState(false);\n    const [docuemnts, setDocuemnts]= useState(null)\n    const [form] = Form.useForm();\n    const {user} = useUser();\n    const firebase = useFirebase();\n    const storage = firebase.storage()\n    const showDrawer = () => {\n        setVisible(true)\n    };\n\n    const onClose = () => {\n        setVisible(false)\n        setRecord(null)\n    };\n\n    const onSubmit = () => {\n        form.submit()\n    };\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    const onFinsh = async (values) => {\n        try {\n            setLoading(true)\n            setVisible(false)\n            const idToken = await user.user.getIdToken(true);\n            const response = await fetch(`https://us-central1-capstone-a3162.cloudfunctions.net/api/approve/${record.id}`, {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${idToken}`\n                },\n                body: JSON.stringify(values)\n            })\n            if (!response.ok) {\n                const json = await response.json();\n                throw new Error(json.message)\n            }\n            const temp = data;\n            temp[index].approved = true;\n            setData(temp)\n            message.success(\"Approved.\")\n            setLoading(false)\n            setIndex(null)\n            setRecord(null)\n        } catch (e) {\n            setLoading(false)\n            message.error(e)\n        }\n    }\n\n    useEffect(async () => {\n        const response = await fetch(`https://us-central1-capstone-a3162.cloudfunctions.net/api/students`, {\n            method: \"GET\",\n        });\n        const students = await response.json()\n        const data = students.filter((element) => {\n            return element.acceptedBy !== undefined\n        }).map((student, index) => {\n            let docuemnts = null\n            docuemnts = student.form?.snapshots.map(async docuemnt=>{\n                const url = await storage.ref(docuemnt.path).getDownloadURL();\n                return {url, name: docuemnt.name}\n            })\n            return {\n                key: index,\n                id: capitalizeFirstLetter(student.hctId),\n                email: `${capitalizeFirstLetter(student.hctId)}@HCT.AC.AE`,\n                name: capitalizeFirstLetter(student.name),\n                acceptedBy: student.acceptedBy,\n                approved: student.approved,\n                form: student.form,\n                docuemnts\n            }\n        })\n        console.log(data)\n        setData(data)\n        setLoading(false);\n    }, []);\n\n    return (\n        <div>\n            <h1>Approve Students</h1>\n            {error && (<Alert\n                message=\"Error\"\n                description={error}\n                type=\"error\"\n                showIcon\n            />)}\n            <Table\n                expandable={{\n                    expandedRowRender: (record, index) => {\n                        console.log(record.form.companies.length)\n                        // let comp = null;\n                        // if(record.form.companies.length !== 0) {\n                        //     record.form.companies.map(company=>{\n                        //         return <li></li>\n                        //     })\n                        // }\n                        return (<p style={{margin: 0}}>\n                            <b>Major:</b> {record.form.major}<br/>\n                            <b>Number Phone:</b> {record.form.numberPhone}<br/>\n                            <b>Program:</b> {record.form.program}<br/>\n                            <b>Sponsered:</b> {record.form.sponsored ? \"Yes\" : \"Not\"}<br/>\n                            <b>Companies:</b> {record.form.companies.length === 0 ? \"Not Choose\" : (\n                            <ul style={{background: \"grey\", margin: 0,marginBottom: \"5px\", padding: 0}}>\n                                {record.form.companies.map((company) => {\n                                    return <div>\n                                        <div><b>{company.comapnyName}</b></div>\n                                        <div>{company.email}</div>\n                                        <div>{company.contactNumber}</div>\n                                    </div>\n                                })}\n                            </ul>)}<br/>\n                        </p>)\n                    },\n                    rowExpandable: record => record.form !== undefined,\n                }}\n                columns={[\n                    {\n                        title: 'HCT ID',\n                        dataIndex: 'id',\n                        key: 'id',\n                        render: text => <a>{text}</a>,\n                    },\n                    {\n                        title: 'Name',\n                        dataIndex: 'name',\n                        key: 'name',\n                        render: text => <a>{text}</a>,\n                    },\n                    {\n                        title: 'Email',\n                        dataIndex: 'email',\n                        key: 'email',\n                    },\n                    {\n                        title: 'Action',\n                        dataIndex: 'action',\n                        key: 'action',\n                        render: (text, record, index) => {\n                            const {id, acceptedBy} = record\n                            if (record.approved) {\n                                return (<Space size=\"middle\">\n                                    <Button\n                                        disabled={true}\n                                    >Approved</Button>\n                                </Space>)\n                            }\n                            if (record.form === undefined) {\n                                return (<Space size=\"middle\">\n                                    <Button\n                                        disabled={true}\n                                    >Doesn't submit yet</Button>\n                                </Space>)\n                            }\n                            return (<Space size=\"middle\">\n                                <Button\n                                    disabled={record.approved ? true : false}\n                                    onClick={() => {\n                                        setRecord(record)\n                                        showDrawer();\n                                        setIndex(index)\n                                    }}>{record.approved ? \"Approved\" : \"Approve\"}</Button>\n                            </Space>)\n                        },\n                    },\n                ]}\n                loading={loading}\n                dataSource={data}\n                pagination={false}\n            />\n            {record && <Drawer\n                title={`Approve Student ${record.name} (${record.id})`}\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{paddingBottom: 80}}\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{marginRight: 8}}>\n                            Cancel\n                        </Button>\n                        <Button onClick={onSubmit} type=\"primary\" loading={loading}>\n                            Submit\n                        </Button>\n                    </div>\n                }\n            >\n                <Form layout=\"vertical\" onFinish={onFinsh} form={form} hideRequiredMark>\n                    <Form.Item label=\"Work Placement Date\" name=\"date\" rules={[{required: true}]}>\n                        <RangePicker/>\n                    </Form.Item>\n                    <Form.Item label=\"Additional Information\" name=\"info\">\n                        <Input.TextArea/>\n                    </Form.Item>\n                </Form>\n            </Drawer>}\n        </div>\n    )\n}\n\nexport default ApproveStudents;","import {useState, useEffect} from \"react\";\nimport {Spin, Alert, Button, Table, Tag, Row, Col, Menu, Space, Form, Input, Avatar, message} from 'antd';\nimport {UserOutlined} from '@ant-design/icons';\nimport {useUser} from \"./User\";\nimport \"./App.css\"\nimport {useFirebase} from \"./Firebase\";\nimport {Redirect, useHistory} from \"react-router-dom\";\nimport ApproveStudents from \"./ApproveStudents\";\n\nconst Resend = () => {\n    const {user} = useUser();\n    const onClick = async () => {\n        const idToken = await user.user.getIdToken(true);\n        const response = await fetch(\"https://us-central1-capstone-a3162.cloudfunctions.net/api/resend\", {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": `Bearer ${idToken}`\n            },\n        })\n        console.log(await response.json())\n    }\n    return (\n        <Button type=\"link\" style={{fontWeight: \"bold\"}} onClick={onClick}>resend</Button>\n    )\n};\nconst EmailWarning = () => {\n    const {user} = useUser();\n    if (!user.user.emailVerified) {\n        return (\n            <Alert\n                message=\"Verify your account\"\n                closable\n                style={{width: \"100%\"}}\n                description={<div>\n                    You are not allowed to do any operations expect editing your profile until you verify your account\n                    through the email sent\n                    <br/>\n                    <Resend/>\n                </div>}\n                type=\"warning\"\n                showIcon\n            />\n        )\n    }\n    return null;\n}\n\nconst AddStudent = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const {user} = useUser();\n    const [form] = Form.useForm();\n    const [error, setError] = useState(null);\n    const columns = [\n        {\n            title: 'HCT ID',\n            dataIndex: 'id',\n            key: 'id',\n            render: text => <a>{text}</a>,\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            render: text => <a>{text}</a>,\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n        },\n        {\n            title: 'Action',\n            dataIndex: 'action',\n            key: 'action',\n            render: (text, record) => {\n                const {id, acceptedBy} = record\n                return (<Space size=\"middle\">\n                    <Button\n                        disabled={acceptedBy ? true : false}\n                        onClick={async () => {\n                            try {\n                                const idToken = await user.user.getIdToken(true);\n                                console.log({hctId: id})\n                                const response = await fetch(`https://us-central1-capstone-a3162.cloudfunctions.net/api/students/${id}`, {\n                                    method: \"DELETE\",\n                                    headers: {\n                                        \"Authorization\": `Bearer ${idToken}`\n                                    },\n                                    body: JSON.stringify({\n                                        hctId: id\n                                    })\n                                })\n                                if (!response.ok) {\n                                    const {message} = await response.json()\n                                    console.log(message)\n                                    throw new Error(message)\n                                }\n\n                                const data1 = data.filter(element => {\n                                    return element.id !== id;\n\n                                })\n                                message.success(`Student ${record.name} (${record.id}) has been deleted successfully`)\n                                setData(data1)\n                            } catch (e) {\n                                message.error(`Failed to delete student ${record.name} (${record.id})`)\n                            }\n\n                        }}>Delete</Button>\n                </Space>)\n            }\n        },\n    ];\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    useEffect(async () => {\n        const response = await fetch(`https://us-central1-capstone-a3162.cloudfunctions.net/api/students?createdBy=${user.user.uid}`, {\n            method: \"GET\",\n        });\n        const students = await response.json()\n        const data = students.map(student => {\n            return {\n                id: capitalizeFirstLetter(student.hctId),\n                email: `${capitalizeFirstLetter(student.hctId)}@HCT.AC.AE`,\n                name: capitalizeFirstLetter(student.name),\n                status: student.acceptedBy ? \"Accepted\" : \"Under Progress\"\n            }\n        })\n        setData(data)\n        setLoading(false);\n    }, []);\n    const onFinsh = async (values) => {\n        try {\n            const {id, fname, lname} = values;\n            const hctId = `H00${id}`\n            const name = `${capitalizeFirstLetter(fname)} ${capitalizeFirstLetter(lname)}`;\n            const status = \"Under Progress\";\n            const email = `${hctId}@HCT.AC.AE`;\n            const idToken = await user.user.getIdToken(true);\n            const response = await fetch(`https://us-central1-capstone-a3162.cloudfunctions.net/api/students`, {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${idToken}`\n                },\n                body: JSON.stringify({\n                    hctId,\n                    name,\n                })\n            })\n            if (!response.ok) {\n                const {message} = await response.json()\n                // console.log(message)\n                throw new Error(message)\n            }\n            // console.log(await response.json())\n            setData([{id: hctId, name, status, email}, ...data])\n            form.resetFields();\n            setError(false)\n\n        } catch (e) {\n            // console.log(e.message)\n            setError(e.message);\n        }\n    }\n    return (\n        <div>\n            <div>\n                {error ? (<Alert\n                    message=\"Error\"\n                    description={error}\n                    type=\"error\"\n                    showIcon\n                />) : null}\n                <Form\n                    name=\"addStudent\"\n                    onFinish={onFinsh}\n                    form={form}\n                >\n                    <Form.Item label=\"HCT ID\" name=\"id\"\n                               rules={\n                                   [{\n                                       max: 6,\n                                       message: \"ID must be 6 characters\"\n                                   },\n                                       {\n                                           min: 6,\n                                           message: \"ID must be 6 characters\"\n                                       },\n                                       {\n                                           pattern: /^\\d+$/g,\n                                           message: \"ID must be number\"\n                                       },\n                                       {\n                                           required: true,\n                                           message: \"ID is required\"\n                                       }]\n                               }\n                    >\n                        <Input addonBefore=\"H00\"/>\n                    </Form.Item>\n                    <Form.Item label=\"First Name\" name=\"fname\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: \"First Name is required\"\n                                   },\n                                   {\n                                       pattern: /^[a-zA-Z]+$/g,\n                                       message: \"Frist Name must be alphaphbet character only\",\n                                   }\n                               ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item label=\"Last Name\" name=\"lname\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: \"Last Name is required\"\n                                   },\n                                   {\n                                       pattern: /^[a-zA-Z]+$/g,\n                                       message: \"Last Name must be alphaphbet character only\",\n                                   }\n                               ]}\n\n                    >\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            ADD\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n            <Table columns={columns} loading={loading} dataSource={data} pagination={false}/>\n        </div>\n    )\n}\nconst Teacher = () => {\n    const {user} = useUser();\n    return (<div>\n        <AddStudent/>\n    </div>);\n}\n\n\nconst rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n        console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    getCheckboxProps: (record) => ({\n        disabled: record.name === 'Disabled User',\n        // Column configuration not to be checked\n        name: record.name,\n    }),\n};\nconst AcceptStudent = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const {user} = useUser();\n    const [form] = Form.useForm();\n    const [error, setError] = useState(null);\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    useEffect(async () => {\n        const response = await fetch(`https://us-central1-capstone-a3162.cloudfunctions.net/api/students`, {\n            method: \"GET\",\n        });\n        const students = await response.json()\n        const data = students.filter((student)=>{\n            return student.approved != true\n        }).map((student, index) => {\n            return {\n                key: index,\n                id: capitalizeFirstLetter(student.hctId),\n                email: `${capitalizeFirstLetter(student.hctId)}@HCT.AC.AE`,\n                name: capitalizeFirstLetter(student.name),\n                acceptedBy: student.acceptedBy\n            }\n        })\n        setData(data)\n        setLoading(false);\n    }, []);\n    const hasSelected = selectedRowKeys.length > 0;\n    const start = async () => {\n        setLoading(true);\n        const idToken = await user.user.getIdToken(true);\n        const promises = selectedRowKeys.map(async key => {\n            const {id} = data[key];\n            const response = await fetch(\"https://us-central1-capstone-a3162.cloudfunctions.net/api/accept\", {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${idToken}`\n                },\n                body: JSON.stringify({\n                    hctId: id\n                })\n            })\n            if (!response.ok) {\n                const {message} = await response.json();\n                return {\n                    key: key,\n                    status: \"failed\",\n                    why: message\n                }\n            }\n            return {\n                key: key,\n                status: \"success\",\n            }\n\n        })\n\n        const values = await Promise.all(promises)\n        let tempdata = data;\n        let failed = []\n        values.forEach(value => {\n            const {key, status} = value\n            if (status === \"success\") {\n                tempdata[key].acceptedBy = user.user.uid;\n            } else {\n                failed.push({name: data[key].name, id: data[key].id})\n            }\n        })\n        if (failed.length !== 0) {\n            message.error(<div>\n                can't confirm for those students:\n                <ul>\n                    {failed.map(({name, id}) => (<li>{`${name} (${id})`}</li>))}\n                </ul>\n            </div>)\n        }\n        setSelectedRowKeys([])\n        setLoading(false);\n    };\n    return (\n        <div>\n            <h1>Accept Students</h1>\n            {error && (<Alert\n                message=\"Error\"\n                description={error}\n                type=\"error\"\n                showIcon\n            />)}\n            <div style={{marginBottom: 16}}>\n                <Button type=\"primary\" onClick={start} disabled={!hasSelected | loading} >\n                    Confirm\n                </Button>\n                <span style={{marginLeft: 8}}>\n                {hasSelected ? `Selected ${selectedRowKeys.length} students` : ''}\n                </span>\n            </div>\n            <Table\n                rowSelection={{\n                    selectedRowKeys,\n                    onChange: selectedRowKeys => {\n                        console.log('selectedRowKeys changed: ', selectedRowKeys);\n                        setSelectedRowKeys(selectedRowKeys);\n                    },\n                    getCheckboxProps: (record) => ({\n                        disabled: record.acceptedBy !== undefined,\n                        // Column configuration not to be checked\n                        name: record.name,\n                    }),\n                }}\n                columns={[\n                    {\n                        title: 'HCT ID',\n                        dataIndex: 'id',\n                        key: 'id',\n                        render: text => <a>{text}</a>,\n                    },\n                    {\n                        title: 'Name',\n                        dataIndex: 'name',\n                        key: 'name',\n                        render: text => <a>{text}</a>,\n                    },\n                    {\n                        title: 'Email',\n                        dataIndex: 'email',\n                        key: 'email',\n                    },\n                    {\n                        title: 'Action',\n                        dataIndex: 'action',\n                        key: 'action',\n                        render: (text, record, index) => {\n                            const {id, acceptedBy} = record\n                            let contentOfButton = null;\n\n\n                            return (<Space size=\"middle\">\n                                <Button\n                                    disabled={acceptedBy ? true : false}\n                                    onClick={async () => {\n                                        try {\n                                            setLoading(true)\n                                            console.log(text)\n                                            const idToken = await user.user.getIdToken(true);\n                                            console.log({hctId: id})\n                                            const response = await fetch(\"https://us-central1-capstone-a3162.cloudfunctions.net/api/accept\", {\n                                                method: \"POST\",\n                                                headers: {\n                                                    \"Authorization\": `Bearer ${idToken}`\n                                                },\n                                                body: JSON.stringify({\n                                                    hctId: id\n                                                })\n                                            })\n                                            if (!response.ok) {\n                                                const {message} = await response.json()\n                                                throw new Error(message)\n                                            }\n                                            const data1 = data.map(element => {\n                                                if (element.id === id) {\n                                                    element.acceptedBy = user.user.uid;\n                                                }\n                                                return element\n                                            })\n                                            message.success(`Student ${record.name} (${record.id}) is confirmed. Email will send to register`)\n                                            setData(data1)\n\n                                            // this will prevent between selector and confirm button confilct\n                                            const copySelectedRowKeys = selectedRowKeys\n                                            console.log(\"key:\", copySelectedRowKeys)\n                                            console.log(\"index\", index)\n                                            const result = copySelectedRowKeys.filter((key) => {\n                                                return key != index\n                                            })\n                                            setSelectedRowKeys(result)\n                                            setLoading(false)\n\n                                        } catch (e) {\n                                            console.log(e)\n                                            message.error(`Failed to confirm student ${record.name} (${record.id})`)\n                                        }\n\n                                    }}>{acceptedBy ? \"Confirmed\" : \"Confirm\"}</Button>\n                            </Space>)\n                        },\n                    },\n                ]}\n                loading={loading}\n                dataSource={data}\n                pagination={false}\n            />\n        </div>\n    )\n}\nconst CareerDep = () => {\n    const [current, setCurrent] = useState('1');\n    const handleClick = e => {\n        setCurrent(e.key)\n    };\n    return <>\n        <Row style={{height: \"100%\"}}>\n            <Col style={{marginRight: \"10px\"}}>\n                <Menu\n                    onClick={handleClick}\n                    style={{width: 256, height: \"100%\"}}\n                    defaultOpenKeys={[1]}\n                    selectedKeys={current}\n                    mode=\"inline\"\n                >\n                    <Menu.Item key=\"1\">Accept Students</Menu.Item>\n                    <Menu.Item key=\"2\">Approve Students</Menu.Item>\n                </Menu>\n            </Col>\n            <Col style={{padding: \"5px\"}}>\n                {\n                    current === '1' ? <AcceptStudent/>  : <ApproveStudents/>\n                }\n                {/*<AcceptStudent/>*/}\n                {/*<ApproveStudents/>*/}\n            </Col>\n        </Row>\n    </>\n}\n\nconst Header = () => {\n    const {user} = useUser();\n    const firebase = useFirebase();\n    const history = useHistory();\n    return (<>\n            <header style={{borderBottom: \"1px solid rgba(0, 0, 0, .1)\", padding: \"5px 10px\", display: \"flex\", alignItems: \"center\"}}>\n                <div>\n                    <img src=\"https://cdn.hct.ac.ae/Images/E_logo1.png\" width=\"150\"/>\n                </div>\n                <div style={{marginLeft: \"auto\"}}>\n                    <a href=\"/\">\n                        <Avatar size={35} icon={<UserOutlined/>}/>\n                        <span style={{marginLeft: \"10px\"}}>{user.user.displayName}</span>\n                    </a>\n                    <button onClick={async () => {\n                        await firebase.auth().signOut()\n                        history.replace({pathname: \"/\"});\n                    }}>\n                        Log out\n                    </button>\n                </div>\n            </header>\n        </>\n    )\n}\n\n\nconst Dashboard = () => {\n    const {user, loading} = useUser();\n    if (loading) {\n        return (<div>\n            <Spin size=\"large\"/>\n        </div>)\n    }\n    if (!user) {\n        return (<Redirect\n            to={{\n                pathname: \"/\",\n                state: {from: {pathname: \"/dashboard\"}}\n            }}\n        />)\n    }\n    if (user) {\n        const {role} = user;\n        let dashboard = null;\n        switch (role) {\n            case \"teacher\":\n                dashboard = (<Teacher/>)\n                break;\n            case \"cd\":\n                dashboard = (<CareerDep/>)\n        }\n        return (\n            <div style={{height: \"100vh\", display: \"flex\", flexDirection: \"column\"}}>\n                <Header/>\n                <EmailWarning/>\n                {dashboard}\n            </div>\n        )\n    }\n};\nexport default Dashboard;","import {useParams} from \"react-router-dom\";\nimport {Form, Input, Select, Button, Checkbox, Upload, message, Result,Spin, Space, Progress} from 'antd';\nimport {InboxOutlined, MinusCircleOutlined, PlusOutlined, SmileOutlined} from '@ant-design/icons';\nimport React, {useEffect, useState} from \"react\"\nimport {useFirebase} from \"./Firebase\";\n\nconst {Option} = Select;\nconst {Dragger} = Upload;\n\nconst Student = () => {\n    let {code} = useParams();\n    const [loading, setLoading] = useState(null)\n    const [approved, setApproved] = useState(null)\n    const [submitted, setSubmitted] = useState(null)\n    const [success, setSuccess]= useState(null)\n    const [error, setError] = useState(null)\n    const [form] = Form.useForm();\n    const [beforeNumber, setBeforeNumber] = useState(\"050\");\n    const firebase = useFirebase()\n    useEffect(async () => {\n        try {\n            setLoading(true);\n            const response = await fetch(`https://us-central1-capstone-a3162.cloudfunctions.net/api/students?code=${code}`, {\n                method: \"GET\",\n            });\n            if(!response.ok) {\n                throw new Error()\n            }\n            const json = await response.json()\n            if(json.length === 0) {\n                throw new Error()\n            }\n            const [student] = json;\n            if(student.form){\n                setSubmitted(true)\n            }\n            if(student.approved){\n                setApproved(true);\n            }\n            form.setFieldsValue({id: student.hctId, name: student.name});\n        } catch (e) {\n            console.log(e)\n          setError(true);\n        }\n        setLoading(false)\n        // const data = students.map(student => {\n        //     return {\n        //         id: capitalizeFirstLetter(student.hctId),\n        //         email: `${capitalizeFirstLetter(student.hctId)}@HCT.AC.AE`,\n        //         name: capitalizeFirstLetter(student.name),\n        //         status: student.acceptedBy ? \"Accepted\" : \"Under Progress\"\n        //     }\n        // })\n        // setData(data)\n        // setLoading(false);\n    }, []);\n    const onFinish = async values => {\n        console.log(values)\n        const {cv, emiratesId, passport, id, name, numberPhone, ...inputs} = values;\n\n        function upload(file, filename, desti) {\n            const storage = firebase.storage();\n\n            // Create a Reference\n            const ref = storage.ref().child(desti).child(filename);\n            // Upload\n            return ref.put(file)\n        }\n\n        const documents = [{field: \"emiratesId\", document: emiratesId}, {field: \"passport\", document: passport}, {field: \"cv\", document: cv}].map(function ({field, document}) {\n            const {file} = document\n            return upload(file, file.name, \"documents\").then(function (snapshot) {\n                const path = snapshot.metadata.fullPath\n                return {field, path}\n            })\n        })\n        const snapshots = await Promise.all(documents)\n        console.log({...inputs, numberPhone: beforeNumber + numberPhone, snapshots, code})\n        const response = await fetch(`https://us-central1-capstone-a3162.cloudfunctions.net/api/apply`, {\n            method: \"POST\",\n            body: JSON.stringify({...inputs, numberPhone: beforeNumber + numberPhone, snapshots, code})\n        });\n        setSuccess(true);\n        console.log(\"ddd:\", await response.json())\n    };\n    if (loading) return (<Spin/>)\n    if(success){\n        return (<Result\n            status=\"success\"\n            title=\"Registration completed\"\n            subTitle=\"You will receive an email once approved\"\n        />)\n    }\n    if(error) return (<Result\n        status=\"404\"\n        title=\"404\"\n        subTitle=\"Sorry, the page you visited does not exist.\"\n    />)\n    if(submitted) return (  <Result\n        icon={<SmileOutlined />}\n        title=\"Already submitted\"\n        subTitle=\"You will be approved soon after validate your information. Just wait our email\"\n    />);\n    return (\n        <>\n            <Form\n                onFinish={onFinish}\n                form={form}\n                initialValues={{program: \"CIS\", startDate: \"30/5/2020\", sponsored: false}}\n            >\n                <div>\n                    <Form.Item\n                        label=\"HCT ID\"\n                        name=\"id\"\n                    >\n                        <Input disabled/>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Name\"\n                        name=\"name\"\n                    >\n                        <Input disabled/>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Program\"\n                        name=\"program\"\n                    >\n                        <Select defaultValue=\"CIS\" style={{width: 120}}>\n                            <Option value=\"CIS\">CIS</Option>\n                            <Option value=\"ENG\">ENG</Option>\n                            <Option value=\"BUS\">BUS</Option>\n                            <option value=\"MEDIA\">Media</option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Major\"\n                        name=\"major\"\n                        rules={[\n                            {required: true}\n                        ]}\n                    >\n                        <Input/>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Number Phone\"\n                        name=\"numberPhone\"\n                        rules={[{required: true},\n                            {len: 7, message: \"Must be exactly 7 characters\"}, {\n                                pattern: /^\\d+$/g,\n                                message: \"Must be number\"\n                            }]\n                        }\n\n                    >\n                        <Input addonBefore={<Select defaultValue=\"050\" onChange={value => {\n                            setBeforeNumber(value)\n                        }} className=\"select-before\">\n                            <Option value=\"050\">050</Option>\n                            <Option value=\"055\">055</Option>\n                            <Option value=\"056\">056</Option>\n                        </Select>}/>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Sponsored\"\n                        name=\"sponsored\"\n                        valuePropName=\"checked\"\n                    >\n                        <Checkbox>Yes</Checkbox>\n                    </Form.Item>\n                </div>\n\n                <div>\n                    <Form.Item\n                        label=\"Passport\"\n                        name=\"passport\"\n                        rules={[\n                            {required: true}\n                        ]}\n                    >\n                        <Dragger multiple={false} accept=\"image/*\" beforeUpload={() => {\n                            return false\n                        }}>\n                            <p className=\"ant-upload-drag-icon\">\n                                <InboxOutlined/>\n                            </p>\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                        </Dragger>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Emirates ID\"\n                        name=\"emiratesId\"\n                        rules={[\n                            {required: true}\n                        ]}\n                    >\n\n                        <Dragger multiple={false} accept=\"image/*\" beforeUpload={() => {\n                            return false\n                        }}>\n                            <p className=\"ant-upload-drag-icon\">\n                                <InboxOutlined/>\n                            </p>\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                        </Dragger>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Curriculum Vitae\"\n                        name=\"cv\"\n                        rules={[\n                            {required: true}\n                        ]}\n                    >\n                        <Dragger accept=\"image/*\" multiple={false} beforeUpload={() => {\n                            return false\n                        }}>\n                            <p className=\"ant-upload-drag-icon\">\n                                <InboxOutlined/>\n                            </p>\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                        </Dragger>\n                    </Form.Item>\n                </div>\n                <div>\n                    <Form.List name=\"companies\">\n                        {(fields, {add, remove}) => (\n                            <>\n                                {fields.map(field => (\n                                    <Space key={field.key} style={{display: 'flex', marginBottom: 8}} align=\"baseline\">\n                                        <Form.Item\n                                            {...field}\n                                            label=\"Comapny Name\"\n                                            name={[field.name, 'comapnyName']}\n                                            fieldKey={[field.fieldKey, 'companyName']}\n                                            rules={[{required: true}]}\n                                        >\n                                            <Input/>\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            label=\"Email\"\n                                            name={[field.name, 'email']}\n                                            rules={[{required: true}, {type: \"email\"}]}\n                                        >\n                                            <Input/>\n                                        </Form.Item>\n                                        <Form.Item\n                                            {...field}\n                                            label=\"Contact Number\"\n                                            name={[field.name, 'contactNumber']}\n                                            rules={[{required: true},\n                                                {len: 10, message: \"Must be exactly 10 number\"}, {\n                                                    pattern: /^[050|056|055|058]\\d+$/g,\n                                                    message: \"Must start with [050|056|055|058] and then 7 numbers\"\n                                                }]\n                                            }\n                                            fieldKey={[field.fieldKey, 'Contact Number']}\n                                        >\n                                            <Input/>\n                                        </Form.Item>\n                                        <MinusCircleOutlined onClick={() => remove(field.name)}/>\n                                    </Space>\n                                ))}\n                                <Form.Item>\n                                    <Button type=\"dashed\" disabled={fields.length >= 2} onClick={() => add()} block\n                                            icon={<PlusOutlined/>}>\n                                        Add Company\n                                    </Button>\n                                </Form.Item>\n                            </>\n                        )}\n                    </Form.List>\n                </div>\n                <div>\n                    <Input.TextArea disabled value={`Student Consent Form Release of Information\nIn accordance with the provisions of HCT Policy LP231 regarding the confidentiality of student records, personal data may be released only under conditions applicable to the disclosure of student data to thir parties, which are:\n1. Disclosure to the student's legal guardian\n2. Statutory obligation of the HCT (e.g. to the Ministry of Higher Education and its associated agencies and the Ministry of Finance in cases of legitmate educational interest)\n3. The Student accepts the provisions of the policy and gives additional consent to the release of personal and academic information.\n3a. to other Ministries and Government institutions for the purpose of establishing contact in connection with employment opportunities (name, HCT ID number, HCT e-mail address and credential level and program will be supplied).\nI understand that HCT will not release information to a third party without my permission\nNote: Information required by law will be released without reference to the student consent.`\n                    }>\n                    </Input.TextArea>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </div>\n            </Form>\n        </>\n\n    )\n}\nexport default Student;","import {Form, Input, Button, Alert, Spin} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {useHistory} from \"react-router-dom\";\nimport \"./Login.css\"\nimport {useFirebase} from \"./Firebase\";\nimport {useState} from \"react\"\nimport {useUser} from \"./User\";\nconst NormalLoginForm = () => {\n    const firebase = useFirebase()\n    const {user, loading} = useUser();\n    const [error, setError] = useState(null);\n    const history = useHistory();\n    const [form] = Form.useForm();\n    const onFinish = async ({email, password}) => {\n        email += \"@HCT.AC.AE\"\n        try {\n            await firebase.auth().signInWithEmailAndPassword(email, password)\n            setError(null)\n            form.resetFields();\n            history.replace({ pathname: \"/dashboard\" });\n        } catch (e) {\n            setError(e.message)\n            form.resetFields();\n        }\n\n    };\n    if (loading) {\n        return <Spin/>\n    }\n    if(user){\n        // history.replace({ pathname: \"/dashboard\" });\n    }\n    return (\n        <div>\n            {error && <Alert message={error} type=\"error\" />}\n            <Form\n                form={form}\n                name=\"normal_login\"\n                className=\"login-form\"\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Email is required',\n                        },\n                        {\n                            pattern: /^[\\w.]+$/i,\n                            message: 'Email is invalid',\n                        }\n                    ]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} addonAfter=\"@HCT.AC.AE\" placeholder=\"Email\"/>\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Password is required\"\n                        },\n                        {\n                            min: 6,\n                            message: \"Password must be at least 6 characters\"\n                        }\n                    ]}\n                >\n                    <Input.Password\n                        prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n                    </Button>\n                </Form.Item>\n            </Form>\n            <a href=\"/register\">Create an account</a>\n        </div>\n    );\n};\nexport default NormalLoginForm;","import {Button, Form, Spin,Input, Radio, message, Result} from \"antd\";\nimport React, {useState} from \"react\";\nimport {UserOutlined} from \"@ant-design/icons\";\nimport {useHistory} from \"react-router\";\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nconst Register = () => {\n    const [success, setSuccess]= useState(null)\n    const [loading, setLoading]= useState(null)\n    const history = useHistory()\n    const onFinish = async (values) => {\n        const {email, fname, lname, ...inputs} = values;\n        try {\n            setLoading(true)\n            const response = await fetch('https://us-central1-capstone-a3162.cloudfunctions.net/api/users', {\n                method: \"POST\",\n                body: JSON.stringify({...inputs,displayName: `${capitalizeFirstLetter(fname)} ${capitalizeFirstLetter(lname)}`, email: email+\"@hct.ac.ae\"})\n            })\n            if(!response.ok){\n                const {message} = await response.json();\n                console.log(message)\n                throw new Error(message);\n            }\n            setSuccess(true)\n            setLoading(false)\n        } catch (error){\n            message.error(error.message)\n            setLoading(false)\n        }\n    };\n    if(success) {\n        return (\n            <div>\n                <Result\n                    status=\"success\"\n                    title=\"Last step\"\n                    subTitle=\"Sign in to your email to verify your account. While you're creating your account, you'll get an email from us. Open the email and find click the verification link. To finish creating your account\"\n                    extra={[\n                        <Button onClick={()=>{\n                            history.replace({ pathname: \"/\" });\n                        }} type=\"primary\" key=\"console\">\n                            Go to login page\n                        </Button>,\n                    ]}\n                />\n            </div>\n        )\n    }\n    return (\n        <Form\n            name=\"register\"\n            initialValues={{\n                role: \"teacher\",\n            }}\n            onFinish={onFinish}\n        >\n            <Form.Item label=\"First Name\" name=\"fname\"\n                       rules={[\n                           {\n                               required: true,\n                               message: \"First Name is required\"\n                           },\n                           {\n                               pattern: /^[a-zA-Z]+$/g,\n                               message: \"Frist Name must be alphaphbet character only\",\n                           }\n                       ]}\n            >\n                <Input/>\n            </Form.Item>\n            <Form.Item label=\"Last Name\" name=\"lname\"\n                       rules={[\n                           {\n                               required: true,\n                               message: \"Last Name is required\"\n                           },\n                           {\n                               pattern: /^[a-zA-Z]+$/g,\n                               message: \"Last Name must be alphaphbet character only\",\n                           }\n                       ]}\n\n            >\n                <Input/>\n            </Form.Item>\n            <Form.Item\n                name=\"email\"\n                label=\"Email\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Email is required',\n                    },\n                    {\n                        pattern: /^[a-zA-Z-.]+$|^h00324601$/i,\n                        message: 'Email is invalid',\n                    }\n                ]}\n            >\n                <Input addonAfter=\"@HCT.AC.AE\" placeholder=\"Email\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[\n                    {\n                        min: 6,\n                        message: 'Password must be at least 6 characters'\n                    },\n                    {\n                        required: true,\n                        message: 'Password is required',\n                    },\n                ]}\n            >\n                <Input.Password/>\n            </Form.Item>\n            <Form.Item\n                label=\"Role\"\n                name=\"role\">\n                <Radio.Group>\n                    <Radio value=\"teacher\">Teacher</Radio>\n                    <Radio value=\"cd\">Career Department</Radio>\n                </Radio.Group>\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" disabled={loading ? true: false}>\n                    {loading ? <Spin/>: \"Submit\"}\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default Register;","// import React, {useState, useContext, useEffect} from 'react';\n// import './App.css';\n// import {Form, Input, Button, Checkbox, Radio, Menu} from 'antd';\n// import Firebase, {FirebaseContext} from './Firebase';\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link,\n//     useHistory,\n//     Redirect\n// } from \"react-router-dom\";\n// import Login from \"./Login\"\n// import firebase from \"firebase/app\";\n// import \"firebase/auth\";\n// import \"firebase/firestore\";\n// import app from \"firebase\";\n//\n// const firebaseConfig = {\n//     apiKey: \"AIzaSyDPo5PSCF9eUt4ON2138vysh51XkXSw8kI\",\n//     authDomain: \"capstone-a3162.firebaseapp.com\",\n//     databaseURL: \"https://capstone-a3162.firebaseio.com\",\n//     projectId: \"capstone-a3162\",\n//     storageBucket: \"capstone-a3162.appspot.com\",\n//     messagingSenderId: \"790078530679\",\n//     appId: \"1:790078530679:web:31992822744e93cc255272\",\n//     measurementId: \"G-SY924H3Z4Y\"\n// };\n//\n//\n// // Initialize Firebase\n// firebase.initializeApp(firebaseConfig);\n//\n// // const UserContext = React.createContext(null);\n//\n// const Register = () => {\n//     const onFinish = async (values) => {\n//         console.log('Success:', values);\n//         // try {\n//         //     const response = await fetch('https://us-central1-capstone-a3162.cloudfunctions.net/api/users', {\n//         //         method: \"POST\",\n//         //         body: JSON.stringify(values)\n//         //     })\n//         //     console.log(await response.json())\n//         // } catch (error){\n//         //     console.log(error)\n//         // }\n//     };\n//     // const onFinishFailed = (errorInfo) => {\n//     //     console.log('Failed:', errorInfo);\n//     // };\n//\n//     return (\n//         <Form\n//             name=\"register\"\n//             initialValues={{\n//                 role: \"teacher\",\n//             }}\n//             onFinish={onFinish}\n//             // onFinishFailed={onFinishFailed}\n//         >\n//             <Form.Item\n//                 label=\"Name\"\n//                 name=\"displayName\"\n//                 rules={[\n//                     {\n//                         required: true,\n//                         message: 'Please input your name!',\n//                     },\n//                 ]}\n//             >\n//                 <Input/>\n//             </Form.Item>\n//             <Form.Item\n//                 label=\"Email\"\n//                 name=\"email\"\n//                 rules={[\n//                     {\n//                         required: true,\n//                         message: 'Please input your email!',\n//                     },\n//                 ]}\n//             >\n//                 <Input/>\n//             </Form.Item>\n//\n//             <Form.Item\n//                 label=\"Password\"\n//                 name=\"password\"\n//                 rules={[\n//                     {\n//                         required: true,\n//                         message: 'Please input your password!',\n//                     },\n//                 ]}\n//             >\n//                 <Input.Password/>\n//             </Form.Item>\n//             <Form.Item\n//                 label=\"Role\"\n//                 name=\"role\">\n//                 <Radio.Group>\n//                     <Radio value=\"teacher\">Teacher</Radio>\n//                     <Radio value=\"cd\">Career Department</Radio>\n//                 </Radio.Group>\n//             </Form.Item>\n//             <Form.Item>\n//                 <Button type=\"primary\" htmlType=\"submit\">\n//                     Submit\n//                 </Button>\n//             </Form.Item>\n//         </Form>\n//     );\n// };\n// // const Login = () => {\n// //     let history = useHistory();\n// //     const {setUser} = useContext(UserContext);\n// //     const onFinish = async ({email, password}) => {\n// //         try {\n// //             const {user} = await firebase.auth().signInWithEmailAndPassword(email, password)\n// //             setUser(user)\n// //             history.replace({pathname: \"/dashboard\"});\n// //         } catch (error) {\n// //             console.log(error)\n// //         }\n// //     };\n// //     return (\n// //         <Form\n// //             name=\"login\"\n// //             initialValues={{\n// //                 role: \"teacher\",\n// //             }}\n// //             onFinish={onFinish}\n// //             // onFinishFailed={onFinishFailed}\n// //         >\n// //             <Form.Item\n// //                 label=\"Email\"\n// //                 name=\"email\"\n// //                 rules={[\n// //                     {\n// //                         required: true,\n// //                         message: 'Please input your email!',\n// //                     },\n// //                 ]}\n// //             >\n// //                 <Input/>\n// //             </Form.Item>\n// //\n// //             <Form.Item\n// //                 label=\"Password\"\n// //                 name=\"password\"\n// //                 rules={[\n// //                     {\n// //                         required: true,\n// //                         message: 'Please input your password!',\n// //                     },\n// //                 ]}\n// //             >\n// //                 <Input.Password/>\n// //             </Form.Item>\n// //             <Form.Item>\n// //                 <Button type=\"primary\" htmlType=\"submit\">\n// //                     Submit\n// //                 </Button>\n// //             </Form.Item>\n// //         </Form>)\n// // };\n// const Dashboard = () => {\n//     const [current, setCurrent] = useState('1')\n//     const handleClick = e => {\n//         setCurrent(e.key)\n//     };\n//     return (\n//         <div style={{height: \"100vh\"}}>\n//             <Menu\n//                 mode=\"inline\"\n//                 theme=\"dark\"\n//                 onClick={handleClick}\n//                 style={{width: 256, height: \"100%\"}}\n//                 selectedKeys={[current]}\n//             >\n//                 <Menu.Item key=\"1\">Add Student</Menu.Item>\n//                 <Menu.Item key=\"2\">Add zg</Menu.Item>\n//             </Menu>\n//         </div>\n//     )\n// }\n//\n// const Entry = () => {\n//     return (\n//         <>\n//             <div style={{\n//                 minHeight: \"100vh\",\n//                 display: \"flex\"\n//             }}>\n//                 <div style={{}}>\n//\n//                 </div>\n//                 <Login/>\n//                 <Register/>\n//             </div>\n//         </>\n//     )\n// }\n//\n// const UserContext = React.createContext(null);\n// const FirebaseContext = React.createContext(null);\n//\n//\n// const FirebaseProvider = ({children}) => {\n//     const [firebase, setFirebase] = useState(null);\n//     useEffect(() => {\n//         import app from \"firebase/app\";\n//         import \"firebase/auth\";\n//         import \"firebase/firestore\";\n//         const config = {\n//             apiKey: \"AIzaSyDPo5PSCF9eUt4ON2138vysh51XkXSw8kI\",\n//             authDomain: \"capstone-a3162.firebaseapp.com\",\n//             databaseURL: \"https://capstone-a3162.firebaseio.com\",\n//             projectId: \"capstone-a3162\",\n//             storageBucket: \"capstone-a3162.appspot.com\",\n//             messagingSenderId: \"790078530679\",\n//             appId: \"1:790078530679:web:31992822744e93cc255272\",\n//             measurementId: \"G-SY924H3Z4Y\"\n//         };\n//         app.initializeApp(config);\n//         setFirebase(app);\n//     }, []);\n//     return (\n//         <FirebaseContext.Provider value={firebase}>\n//             {children}\n//         </FirebaseContext.Provider>\n//     )\n// }\n//\n// const useFirebase = () => {\n//     return useContext(FirebaseContext)\n// }\n//\n//\n// const UserProvider = ({children}) => {\n//     const [user, setUser] = useState(null)\n//     const firebase = useFirebase();\n//     useEffect(() => {\n//         firebase.auth().onAuthStateChanged((user)=>{\n//             user ? setUser(user) : null\n//         })\n//     }, []);\n//     return (\n//         <UserContext.Provider value={{user, setUser}}>\n//             {children}\n//         </UserContext.Provider>\n//     )\n// }\n//\n// const useUser = ()=>{\n//     return useContext(UserContext)\n// }\n//\n\nimport {FirebaseProvider, useFirebase} from \"./Firebase\";\nimport {UserProvider, useUser} from \"./User\"\nimport Dashboard from \"./Dashboard\";\nimport Student from \"./Student\";\nimport Login from \"./Login\"\nimport Register from \"./Register\"\nimport {BrowserRouter as Router, Switch, Route, useParams} from \"react-router-dom\";\n\n\nconst App = () => {\n    return (\n        <FirebaseProvider>\n            <UserProvider>\n                <Router>\n                        <Switch>\n                            <Route path=\"/dashboard\">\n                                <Dashboard/>\n                            </Route>\n                            <Route path=\"/register\">\n                                <Register/>\n                            </Route>\n                            <Route path=\"/:code\">\n                                <Student/>\n                            </Route>\n                            <Route path=\"/\">\n                                <Login/>\n                            </Route>\n                        </Switch>\n                </Router>\n            </UserProvider>\n        </FirebaseProvider>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}